TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(65)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(2)), node: DefType("Vec", TypeFn("T", Type, Cons(User("Vec"))), TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(64)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(2)), node: DefType("Seq", Rec("Seq", IdxFn("X", NmSet, IdxFn("Y", NmSet, TypeFn("T", Type, Sum(TypeApp(Var("Vec"), Var("T")), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Tt, Exists("X3", NmSet, NoParse("X1 % X2 % X3 = X"), Exists("Y1", NmSet, Tt, Exists("Y2", NmSet, Tt, Exists("Y3", NmSet, Tt, Exists("Y4", NmSet, NoParse("Y1 % Y2 % Y3 % Y4 = Y"), Prod(Nm(Var("X1")), Prod(Cons(Nat), Prod(Ref(Var("Y1"), TypeApp(IdxApp(IdxApp(Cons(Seq), Var("X2")), Var("Y2")), Var("T"))), Ref(Var("Y3"), TypeApp(IdxApp(IdxApp(Cons(Seq), Var("X3")), Var("Y4")), Var("T")))))))))))))))))), TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(63)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(NoSynthRule), node: Let("nums", TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(2)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoCheck(0)), node: AnnoC(TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(1)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(NoSynthRule), node: Unimp }) }, Lift(TypeApp(IdxApp(IdxApp(Cons(Seq), Var("X")), Var("Y")), Cons(Nat)))) }) }, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(62)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(NoSynthRule), node: Let("vec_max", TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(4)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoCheck(0)), node: AnnoC(TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(3)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(NoSynthRule), node: Unimp }) }, Lift(Thk(Empty, Cons(Arrow(TypeApp(Var("Vec"), Cons(Nat)), Cons(Lift(Cons(Nat)), WR(Empty, Empty))), WR(Empty, Empty))))) }) }, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(61)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(NoSynthRule), node: Let("max", TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(58)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoCheck(0)), node: AnnoC(TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(57)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(NoSynthRule), node: Ret(TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: ThunkAnon(TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(56)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(NoSynthRule), node: Fix("max", TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(55)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(NoSynthRule), node: Lam("seq", TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(54)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(Unimplemented), node: Unroll(TypeInfo { dir: Synth, ctxt: Empty, typ: Err(VarNotInScope("seq")), node: Var("seq") }, "seq", TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(53)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(NoSynthRule), node: Case(TypeInfo { dir: Synth, ctxt: Empty, typ: Err(VarNotInScope("seq")), node: Var("seq") }, "vec", TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(6)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: App(TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(5)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: Force(TypeInfo { dir: Synth, ctxt: Empty, typ: Err(VarNotInScope("vec_max")), node: Var("vec_max") }) }) }, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(VarNotInScope("vec")), node: Var("vec") }) }) }, "bin", TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(52)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(NoSynthRule), node: Let("let_split_sugar", TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(7)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(NoSynthRule), node: Ret(TypeInfo { dir: Synth, ctxt: Empty, typ: Err(VarNotInScope("bin")), node: Var("bin") }) }) }, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(51)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(NoSynthRule), node: Split(TypeInfo { dir: Synth, ctxt: Empty, typ: Err(VarNotInScope("let_split_sugar")), node: Var("let_split_sugar") }, "n", "sugar_split_snd", TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(50)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(NoSynthRule), node: Split(TypeInfo { dir: Synth, ctxt: Empty, typ: Err(VarNotInScope("sugar_split_snd")), node: Var("sugar_split_snd") }, "_x", "sugar_split_snd", TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(49)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(NoSynthRule), node: Split(TypeInfo { dir: Synth, ctxt: Empty, typ: Err(VarNotInScope("sugar_split_snd")), node: Var("sugar_split_snd") }, "l", "r", TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(48)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(NoSynthRule), node: Let("let_split_sugar", TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(16)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(NoSynthRule), node: Let("memo_name_sugar", TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(8)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(Unimplemented), node: PrimApp(NameBin(TypeInfo { dir: Synth, ctxt: Empty, typ: Err(VarNotInScope("n")), node: Var("n") }, TypeInfo { dir: Synth, ctxt: Empty, typ: Ok(Nm(Sing(Name(Num(1))))), node: Name(Num(1)) })) }) }, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(15)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(NoSynthRule), node: Let("memo_keyword_sugar", TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(13)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(NoSynthRule), node: Thunk(TypeInfo { dir: Synth, ctxt: Empty, typ: Err(VarNotInScope("memo_name_sugar")), node: Var("memo_name_sugar") }, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(12)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(NoSynthRule), node: Let("app_get_sugar_l", TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(9)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: Get(TypeInfo { dir: Synth, ctxt: Empty, typ: Err(VarNotInScope("l")), node: Var("l") }) }) }, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(11)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: App(TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(10)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: Force(TypeInfo { dir: Synth, ctxt: Empty, typ: Err(VarNotInScope("max")), node: Var("max") }) }) }, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(VarNotInScope("app_get_sugar_l")), node: Var("app_get_sugar_l") }) }) }) }) }) }) }, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(14)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(Unimplemented), node: PrimApp(RefThunk(TypeInfo { dir: Synth, ctxt: Empty, typ: Err(VarNotInScope("memo_keyword_sugar")), node: Var("memo_keyword_sugar") })) }) }) }) }) }) }, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(47)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(NoSynthRule), node: Split(TypeInfo { dir: Synth, ctxt: Empty, typ: Err(VarNotInScope("let_split_sugar")), node: Var("let_split_sugar") }, "unused", "ml", TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(46)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(NoSynthRule), node: Let("n1", TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(17)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(Unimplemented), node: PrimApp(NameBin(TypeInfo { dir: Synth, ctxt: Empty, typ: Err(VarNotInScope("n")), node: Var("n") }, TypeInfo { dir: Synth, ctxt: Empty, typ: Ok(Nm(Sing(Name(Num(1))))), node: Name(Num(1)) })) }) }, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(45)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(NoSynthRule), node: Let("let_split_sugar", TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(24)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(NoSynthRule), node: Let("memo_keyword_sugar", TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(22)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(NoSynthRule), node: Thunk(TypeInfo { dir: Synth, ctxt: Empty, typ: Err(VarNotInScope("n1")), node: Var("n1") }, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(21)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(NoSynthRule), node: Let("app_get_sugar_l", TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(18)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: Get(TypeInfo { dir: Synth, ctxt: Empty, typ: Err(VarNotInScope("l")), node: Var("l") }) }) }, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(20)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: App(TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(19)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: Force(TypeInfo { dir: Synth, ctxt: Empty, typ: Err(VarNotInScope("max")), node: Var("max") }) }) }, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(VarNotInScope("app_get_sugar_l")), node: Var("app_get_sugar_l") }) }) }) }) }) }) }, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(23)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(Unimplemented), node: PrimApp(RefThunk(TypeInfo { dir: Synth, ctxt: Empty, typ: Err(VarNotInScope("memo_keyword_sugar")), node: Var("memo_keyword_sugar") })) }) }) }) }, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(44)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(NoSynthRule), node: Split(TypeInfo { dir: Synth, ctxt: Empty, typ: Err(VarNotInScope("let_split_sugar")), node: Var("let_split_sugar") }, "unused", "ml", TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(43)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(NoSynthRule), node: Let("nf", TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(25)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(NoSynthRule), node: Ret(TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamMism(0)), node: NameFn(TypeInfo { dir: Synth, ctxt: Empty, typ: Ok(NmArrow(Nm, NmArrow(Nm, Nm))), node: Lam("n", Nm, TypeInfo { dir: Synth, ctxt: IVar(Empty, "n", Nm), typ: Ok(NmArrow(Nm, Nm)), node: Lam("v", Nm, TypeInfo { dir: Synth, ctxt: IVar(IVar(Empty, "n", Nm), "v", Nm), typ: Ok(Nm), node: Bin(TypeInfo { dir: Synth, ctxt: IVar(IVar(Empty, "n", Nm), "v", Nm), typ: Ok(Nm), node: Var("n") }, TypeInfo { dir: Synth, ctxt: IVar(IVar(Empty, "n", Nm), "v", Nm), typ: Ok(Nm), node: Var("v") }) }) }) }) }) }) }, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(42)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(NoSynthRule), node: Let("n2", TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(28)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(NoSynthRule), node: Let("sugar_nmfn_exp", TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(26)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(Unimplemented), node: NameFnApp(TypeInfo { dir: Synth, ctxt: Empty, typ: Err(VarNotInScope("nf")), node: Var("nf") }, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(VarNotInScope("n")), node: Var("n") }) }) }, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(27)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(Unimplemented), node: NameFnApp(TypeInfo { dir: Synth, ctxt: Empty, typ: Err(VarNotInScope("sugar_nmfn_exp")), node: Var("sugar_nmfn_exp") }, TypeInfo { dir: Synth, ctxt: Empty, typ: Ok(Nm(Sing(Name(Num(2))))), node: Name(Num(2)) }) }) }) }) }, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(41)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(NoSynthRule), node: Let("mr", TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(35)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(NoSynthRule), node: Let("t", TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(33)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(NoSynthRule), node: Thunk(TypeInfo { dir: Synth, ctxt: Empty, typ: Err(VarNotInScope("n2")), node: Var("n2") }, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(32)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(NoSynthRule), node: Let("rv", TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(29)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: Get(TypeInfo { dir: Synth, ctxt: Empty, typ: Err(VarNotInScope("r")), node: Var("r") }) }) }, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(31)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: App(TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(30)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: Force(TypeInfo { dir: Synth, ctxt: Empty, typ: Err(VarNotInScope("max")), node: Var("max") }) }) }, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(VarNotInScope("rv")), node: Var("rv") }) }) }) }) }) }) }, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(34)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: Force(TypeInfo { dir: Synth, ctxt: Empty, typ: Err(VarNotInScope("t")), node: Var("t") }) }) }) }) }, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(40)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(NoSynthRule), node: Let("sugar_if_scrutinee", TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(36)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(Unimplemented), node: PrimApp(NatLt(TypeInfo { dir: Synth, ctxt: Empty, typ: Err(VarNotInScope("mr")), node: Var("mr") }, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(VarNotInScope("ml")), node: Var("ml") })) }) }, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(39)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(Unimplemented), node: IfThenElse(TypeInfo { dir: Synth, ctxt: Empty, typ: Err(VarNotInScope("sugar_if_scrutinee")), node: Var("sugar_if_scrutinee") }, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(37)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(NoSynthRule), node: Ret(TypeInfo { dir: Synth, ctxt: Empty, typ: Err(VarNotInScope("ml")), node: Var("ml") }) }) }, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(38)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(NoSynthRule), node: Ret(TypeInfo { dir: Synth, ctxt: Empty, typ: Err(VarNotInScope("mr")), node: Var("mr") }) }) }) }) }) }) }) }) }) }) }) }) }) }) }) }) }) }) }) }) }) }) }) }) }) }) }) }) }) }) }) }) }) }) }) }) }) }) }) }) }) }, Lift(Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(TypeApp(IdxApp(IdxApp(Cons(Seq), Var("X")), Var("Y")), Cons(Nat)), Cons(Lift(Cons(Nat)), WR(FlatMap(Lam("x", Nm, Disj(Sing(Bin(Var("x"), Name(Num(1)))), Sing(Bin(Var("x"), Name(Num(2)))))), Var("X")), Empty))), WR(Empty, Empty))))))) }) }, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(60)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: App(TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: DebugLabel(Some(Num(59)), None, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(ParamNoSynth(0)), node: Force(TypeInfo { dir: Synth, ctxt: Empty, typ: Err(VarNotInScope("max")), node: Var("max") }) }) }, TypeInfo { dir: Synth, ctxt: Empty, typ: Err(VarNotInScope("nums")), node: Var("nums") }) }) }) }) }) }) }) }) }) }) }) }) }