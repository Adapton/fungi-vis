DebugLabel(Some(Num(146)), None, DefType("Vec", Rec("Vec", Cons(User("Vec"))), DebugLabel(Some(Num(145)), None, Let("vec_filter", DebugLabel(Some(Num(2)), None, Anno(DebugLabel(Some(Num(1)), None, Unimp), Lift(Thk(Empty, Cons(Arrow(TypeApp(Var("Vec"), Cons(Nat)), Cons(Arrow(Thk(Empty, Cons(Arrow(Cons(Nat), Cons(Lift(Cons(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), Cons(Lift(TypeApp(Var("Vec"), Cons(Nat))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))), DebugLabel(Some(Num(144)), None, Let("vec_map", DebugLabel(Some(Num(4)), None, Anno(DebugLabel(Some(Num(3)), None, Unimp), Lift(Thk(Empty, Cons(Arrow(TypeApp(Var("Vec"), Cons(Nat)), Cons(Arrow(Thk(Empty, Cons(Arrow(Cons(Nat), Cons(Lift(Cons(Nat)), WR(Empty, Empty))), WR(Empty, Empty))), Cons(Lift(TypeApp(Var("Vec"), Cons(Nat))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))), DebugLabel(Some(Num(143)), None, DefType("Seq", Rec("Seq", Rec("Seq", TypeFn("X", TypeFn("Y", Sum(Var("Vec"), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Tt, Exists("X3", NmSet, NoParse("X1 % X2 % X3 = X"), Exists("Y1", NmSet, Tt, Exists("Y2", NmSet, Tt, Exists("Y3", NmSet, Tt, Exists("Y4", NmSet, NoParse("Y1 % Y2 % Y3 % Y4 = Y"), Prod(Nm(Var("X1")), Prod(Cons(Nat), Prod(Ref(Var("Y1"), IdxApp(IdxApp(Cons(Seq), Var("X2")), Var("Y2"))), Ref(Var("Y3"), IdxApp(IdxApp(Cons(Seq), Var("X3")), Var("Y4")))))))))))))))))), DebugLabel(Some(Num(142)), None, Let("nums", DebugLabel(Some(Num(6)), None, Anno(DebugLabel(Some(Num(5)), None, Unimp), Lift(TypeApp(IdxApp(IdxApp(Cons(Seq), Var("X")), Var("Y")), Cons(Nat))))), DebugLabel(Some(Num(141)), None, Let("max", DebugLabel(Some(Num(46)), None, Anno(DebugLabel(Some(Num(45)), None, Ret(ThunkAnon(DebugLabel(Some(Num(44)), None, Fix("max", DebugLabel(Some(Num(43)), None, Lam("seq", DebugLabel(Some(Num(42)), None, Unroll(Var("seq"), "seq", DebugLabel(Some(Num(41)), None, Case(Var("seq"), "vec", DebugLabel(Some(Num(8)), None, App(DebugLabel(Some(Num(7)), None, Force(Var("vec_max"))), Var("vec"))), "bin", DebugLabel(Some(Num(40)), None, Let("let_split_sugar", DebugLabel(Some(Num(9)), None, Ret(Var("bin"))), DebugLabel(Some(Num(39)), None, Split(Var("let_split_sugar"), "n", "sugar_split_snd", DebugLabel(Some(Num(38)), None, Split(Var("sugar_split_snd"), "_x", "sugar_split_snd", DebugLabel(Some(Num(37)), None, Split(Var("sugar_split_snd"), "l", "r", DebugLabel(Some(Num(36)), None, Let("let_split_sugar", DebugLabel(Some(Num(18)), None, Let("memo_name_sugar", DebugLabel(Some(Num(10)), None, PrimApp(NameBin(Var("n"), Name(Num(1))))), DebugLabel(Some(Num(17)), None, Let("memo_keyword_sugar", DebugLabel(Some(Num(15)), None, Thunk(Var("memo_name_sugar"), DebugLabel(Some(Num(14)), None, Let("app_get_sugar_l", DebugLabel(Some(Num(11)), None, Get(Var("l"))), DebugLabel(Some(Num(13)), None, App(DebugLabel(Some(Num(12)), None, Force(Var("max"))), Var("app_get_sugar_l"))))))), DebugLabel(Some(Num(16)), None, PrimApp(RefThunk(Var("memo_keyword_sugar")))))))), DebugLabel(Some(Num(35)), None, Split(Var("let_split_sugar"), "unused", "ml", DebugLabel(Some(Num(34)), None, Let("let_split_sugar", DebugLabel(Some(Num(27)), None, Let("memo_name_sugar", DebugLabel(Some(Num(19)), None, PrimApp(NameBin(Var("n"), Name(Num(2))))), DebugLabel(Some(Num(26)), None, Let("memo_keyword_sugar", DebugLabel(Some(Num(24)), None, Thunk(Var("memo_name_sugar"), DebugLabel(Some(Num(23)), None, Let("app_get_sugar_r", DebugLabel(Some(Num(20)), None, Get(Var("r"))), DebugLabel(Some(Num(22)), None, App(DebugLabel(Some(Num(21)), None, Force(Var("max"))), Var("app_get_sugar_r"))))))), DebugLabel(Some(Num(25)), None, PrimApp(RefThunk(Var("memo_keyword_sugar")))))))), DebugLabel(Some(Num(33)), None, Split(Var("let_split_sugar"), "unused", "mr", DebugLabel(Some(Num(32)), None, Let("sugar_if_scrutinee", DebugLabel(Some(Num(28)), None, PrimApp(NatLt(Var("mr"), Var("ml")))), DebugLabel(Some(Num(31)), None, IfThenElse(Var("sugar_if_scrutinee"), DebugLabel(Some(Num(29)), None, Ret(Var("ml"))), DebugLabel(Some(Num(30)), None, Ret(Var("mr")))))))))))))))))))))))))))))))))), Lift(Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(TypeApp(IdxApp(IdxApp(Cons(Seq), Var("X")), Var("Y")), Cons(Nat)), Cons(Lift(Cons(Nat)), WR(FlatMap(NoParse("# x . { x , @ 1 } % { x , @ 2 }"), Var("X")), Empty))), WR(Empty, Empty)))))))), DebugLabel(Some(Num(140)), None, Let("filter", DebugLabel(Some(Num(96)), None, Anno(DebugLabel(Some(Num(95)), None, Ret(ThunkAnon(DebugLabel(Some(Num(94)), None, Fix("filter", DebugLabel(Some(Num(93)), None, Lam("seq", DebugLabel(Some(Num(92)), None, Lam("f", DebugLabel(Some(Num(91)), None, Unroll(Var("seq"), "sugar_match_unroll", DebugLabel(Some(Num(90)), None, Case(Var("sugar_match_unroll"), "vec", DebugLabel(Some(Num(49)), None, App(DebugLabel(Some(Num(48)), None, App(DebugLabel(Some(Num(47)), None, Force(Var("vec_filter"))), Var("f"))), Var("vec"))), "bin", DebugLabel(Some(Num(89)), None, Let("let_split_sugar", DebugLabel(Some(Num(50)), None, Ret(Var("bin"))), DebugLabel(Some(Num(88)), None, Split(Var("let_split_sugar"), "n", "sugar_split_snd", DebugLabel(Some(Num(87)), None, Split(Var("sugar_split_snd"), "lev", "sugar_split_snd", DebugLabel(Some(Num(86)), None, Split(Var("sugar_split_snd"), "l", "r", DebugLabel(Some(Num(85)), None, Let("let_split_sugar", DebugLabel(Some(Num(60)), None, Let("memo_name_sugar", DebugLabel(Some(Num(51)), None, PrimApp(NameBin(Var("n"), Name(Num(1))))), DebugLabel(Some(Num(59)), None, Let("memo_keyword_sugar", DebugLabel(Some(Num(57)), None, Thunk(Var("memo_name_sugar"), DebugLabel(Some(Num(56)), None, Let("app_get_sugar_l", DebugLabel(Some(Num(52)), None, Get(Var("l"))), DebugLabel(Some(Num(55)), None, App(DebugLabel(Some(Num(54)), None, App(DebugLabel(Some(Num(53)), None, Force(Var("filter"))), Var("f"))), Var("app_get_sugar_l"))))))), DebugLabel(Some(Num(58)), None, PrimApp(RefThunk(Var("memo_keyword_sugar")))))))), DebugLabel(Some(Num(84)), None, Split(Var("let_split_sugar"), "rsl", "sl", DebugLabel(Some(Num(83)), None, Let("let_split_sugar", DebugLabel(Some(Num(70)), None, Let("memo_name_sugar", DebugLabel(Some(Num(61)), None, PrimApp(NameBin(Var("n"), Name(Num(2))))), DebugLabel(Some(Num(69)), None, Let("memo_keyword_sugar", DebugLabel(Some(Num(67)), None, Thunk(Var("memo_name_sugar"), DebugLabel(Some(Num(66)), None, Let("app_get_sugar_r", DebugLabel(Some(Num(62)), None, Get(Var("r"))), DebugLabel(Some(Num(65)), None, App(DebugLabel(Some(Num(64)), None, App(DebugLabel(Some(Num(63)), None, Force(Var("filter"))), Var("f"))), Var("app_get_sugar_r"))))))), DebugLabel(Some(Num(68)), None, PrimApp(RefThunk(Var("memo_keyword_sugar")))))))), DebugLabel(Some(Num(82)), None, Split(Var("let_split_sugar"), "rsr", "sr", DebugLabel(Some(Num(81)), None, Let("sugar_if_scrutinee", DebugLabel(Some(Num(72)), None, App(DebugLabel(Some(Num(71)), None, Force(Var("is_empty"))), Var("sl"))), DebugLabel(Some(Num(80)), None, IfThenElse(Var("sugar_if_scrutinee"), DebugLabel(Some(Num(73)), None, Ret(Var("sr"))), DebugLabel(Some(Num(79)), None, Let("sugar_if_scrutinee", DebugLabel(Some(Num(75)), None, App(DebugLabel(Some(Num(74)), None, Force(Var("is_empty"))), Var("sr"))), DebugLabel(Some(Num(78)), None, IfThenElse(Var("sugar_if_scrutinee"), DebugLabel(Some(Num(76)), None, Ret(Var("sl"))), DebugLabel(Some(Num(77)), None, Ret(Roll(Inj2(Pair(Var("n"), Pair(Var("lev"), Pair(Var("rsl"), Var("rsr"))))))))))))))))))))))))))))))))))))))))))))), Lift(Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(TypeApp(IdxApp(IdxApp(Cons(Seq), Var("X")), Var("Y")), Cons(Nat)), Cons(Arrow(Thk(Empty, Cons(Arrow(Cons(Nat), Cons(Lift(Cons(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), Cons(Lift(Cons(Nat)), WR(FlatMap(NoParse("# x . { x , @ 1 } % { x , @ 2 }"), Var("X")), Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), DebugLabel(Some(Num(139)), None, Let("map", DebugLabel(Some(Num(136)), None, Anno(DebugLabel(Some(Num(135)), None, Ret(ThunkAnon(DebugLabel(Some(Num(134)), None, Fix("map", DebugLabel(Some(Num(133)), None, Lam("seq", DebugLabel(Some(Num(132)), None, Lam("f", DebugLabel(Some(Num(131)), None, Unroll(Var("seq"), "sugar_match_unroll", DebugLabel(Some(Num(130)), None, Case(Var("sugar_match_unroll"), "vec", DebugLabel(Some(Num(99)), None, App(DebugLabel(Some(Num(98)), None, App(DebugLabel(Some(Num(97)), None, Force(Var("vec_map"))), Var("f"))), Var("vec"))), "bin", DebugLabel(Some(Num(129)), None, Let("let_split_sugar", DebugLabel(Some(Num(100)), None, Ret(Var("bin"))), DebugLabel(Some(Num(128)), None, Split(Var("let_split_sugar"), "n", "sugar_split_snd", DebugLabel(Some(Num(127)), None, Split(Var("sugar_split_snd"), "lev", "sugar_split_snd", DebugLabel(Some(Num(126)), None, Split(Var("sugar_split_snd"), "l", "r", DebugLabel(Some(Num(125)), None, Let("let_split_sugar", DebugLabel(Some(Num(110)), None, Let("memo_name_sugar", DebugLabel(Some(Num(101)), None, PrimApp(NameBin(Var("n"), Name(Num(1))))), DebugLabel(Some(Num(109)), None, Let("memo_keyword_sugar", DebugLabel(Some(Num(107)), None, Thunk(Var("memo_name_sugar"), DebugLabel(Some(Num(106)), None, Let("app_get_sugar_l", DebugLabel(Some(Num(102)), None, Get(Var("l"))), DebugLabel(Some(Num(105)), None, App(DebugLabel(Some(Num(104)), None, App(DebugLabel(Some(Num(103)), None, Force(Var("map"))), Var("f"))), Var("app_get_sugar_l"))))))), DebugLabel(Some(Num(108)), None, PrimApp(RefThunk(Var("memo_keyword_sugar")))))))), DebugLabel(Some(Num(124)), None, Split(Var("let_split_sugar"), "rsl", "sl", DebugLabel(Some(Num(123)), None, Let("let_split_sugar", DebugLabel(Some(Num(120)), None, Let("memo_name_sugar", DebugLabel(Some(Num(111)), None, PrimApp(NameBin(Var("n"), Name(Num(2))))), DebugLabel(Some(Num(119)), None, Let("memo_keyword_sugar", DebugLabel(Some(Num(117)), None, Thunk(Var("memo_name_sugar"), DebugLabel(Some(Num(116)), None, Let("app_get_sugar_r", DebugLabel(Some(Num(112)), None, Get(Var("r"))), DebugLabel(Some(Num(115)), None, App(DebugLabel(Some(Num(114)), None, App(DebugLabel(Some(Num(113)), None, Force(Var("map"))), Var("f"))), Var("app_get_sugar_r"))))))), DebugLabel(Some(Num(118)), None, PrimApp(RefThunk(Var("memo_keyword_sugar")))))))), DebugLabel(Some(Num(122)), None, Split(Var("let_split_sugar"), "rsr", "sr", DebugLabel(Some(Num(121)), None, Ret(Roll(Inj2(Pair(Var("n"), Pair(Var("lev"), Pair(Var("rsl"), Var("rsr"))))))))))))))))))))))))))))))))))))), Lift(Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(TypeApp(IdxApp(IdxApp(Cons(Seq), Var("X")), Var("Y")), Cons(Nat)), Cons(Arrow(Thk(Empty, Cons(Arrow(Cons(Nat), Cons(Lift(Cons(Nat)), WR(Empty, Empty))), WR(Empty, Empty))), Cons(Lift(Cons(Nat)), WR(FlatMap(NoParse("# x . { x , @ 1 } % { x , @ 2 }"), Var("X")), Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), DebugLabel(Some(Num(138)), None, App(DebugLabel(Some(Num(137)), None, Force(Var("max"))), Var("nums")))))))))))))))))))